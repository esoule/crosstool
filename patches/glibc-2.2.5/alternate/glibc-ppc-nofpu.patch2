--- glibc-2.2.5/sysdeps/unix/sysv/linux/init-first.c.orig	Wed Jun  5 14:39:12 2002
+++ glibc-2.2.5/sysdeps/unix/sysv/linux/init-first.c	Wed Jun  5 14:39:15 2002
@@ -77,10 +77,12 @@
       /* Set the FPU control word to the proper default value if the
 	 kernel would use a different value.  (In a static program we
 	 don't have this information.)  */
+#ifdef WITH_FP
 #ifdef SHARED
       if (__fpu_control != _dl_fpu_control)
 #endif
 	__setfpucw (__fpu_control);
+#endif
     }
 
   /* Save the command-line arguments.  */
--- glibc-2.2.5/configure.in.orig	Thu Jun  6 12:57:53 2002
+++ glibc-2.2.5/configure.in	Thu Jun  6 13:00:59 2002
@@ -1579,6 +1579,10 @@
 AC_SUBST(use_ldconfig)
 AC_SUBST(ldd_rewrite_script)
 
+if test $with_fp = yes; then
+  AC_DEFINE(WITH_FP)
+fi
+
 AC_SUBST(gnu_ld) AC_SUBST(gnu_as) AC_SUBST(elf) AC_SUBST(xcoff)
 if test $gnu_ld = yes; then
   AC_DEFINE(HAVE_GNU_LD)
--- glibc-2.2.5/config.h.in.orig	Thu Jun  6 13:17:09 2002
+++ glibc-2.2.5/config.h.in	Thu Jun  6 13:17:35 2002
@@ -2,6 +2,9 @@
 # error "glibc cannot be compiled without optimization"
 #endif
 
+/* Define if using hardware FPU; set by --with-fp. */
+#undef WITH_FP
+
 /* Define if using GNU ld, with support for weak symbols in a.out,
    and for symbol set and warning messages extensions in a.out and ELF.
    This implies HAVE_WEAK_SYMBOLS; set by --with-gnu-ld.  */
--- glibc-2.2.5/config.make.in.orig	Thu Jun  6 14:34:54 2002
+++ glibc-2.2.5/config.make.in	Thu Jun  6 14:36:11 2002
@@ -44,6 +44,7 @@
 have-initfini = @libc_cv_have_initfini@
 have-Bgroup = @libc_cv_Bgroup@
 need-nopic-initfini = @nopic_initfini@
+with-fp = @with_fp@
 with-cvs = @with_cvs@
 old-glibc-headers = @old_glibc_headers@
 unwind-find-fde = @libc_cv_gcc_unwind_find_fde@
--- glibc-2.2.5/math/Makefile.orig	Fri Jun  7 16:43:43 2002
+++ glibc-2.2.5/math/Makefile	Fri Jun  7 16:49:45 2002
@@ -28,8 +28,12 @@
 # Internal header files.
 distribute	:= math_ldbl.h math_private.h machine/asm.h
 
+include ../Makeconfig
+
 # FPU support code.
+ifeq ($(with-fp),yes)
 aux		:= setfpucw fpu_control
+endif
 
 # Build the -lm library.
 
@@ -78,8 +82,6 @@
 routines = $(calls) $(calls:=f) $(long-c-$(long-double-fcts))
 long-c-yes = $(calls:=l)
 distribute += $(long-c-yes:=.c)
-
-include ../Makeconfig
 
 # Rules for the test suite.
 tests = test-matherr test-fenv atest-exp atest-sincos atest-exp2 basic-test \
