Lets you work around the canadian cross build error

.../gcc-3.4.0-glibc-2.1.3/build-glibc/elf/sln .../gcc-3.4.0-glibc-2.1.3/build-glibc/elf/symlink.list
make[1]: *** [install-symbolic-link] Segmentation fault
make[1]: Leaving directory `.../gcc-3.4.0-glibc-2.1.3/glibc-2.1.3'
make: *** [install] Error 2

by setting --host != --build when running glibc-2.1.3/configure
instead of hoping that host and build aren't aliases for each other
and that running a host program on the build machine doesn't 
put up a dialog box or accidentally work.

(cf. http://sources.redhat.com/ml/crossgcc/2002-08/msg00099.html, in which 
the run of conftest caused a dialog box to pop up and block the build on cygwin)

--- glibc-2.1.3/configure.old	2004-05-26 19:30:45.000000000 -0700
+++ glibc-2.1.3/configure	2004-05-26 19:42:29.000000000 -0700
@@ -1224,7 +1224,7 @@
 build_os=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
 echo "$ac_t""$build" 1>&6
 
-if test $host != $build; then
+if test x$host_alias != x$build_alias; then
   ac_tool_prefix=${host_alias}-
 else
   ac_tool_prefix=
@@ -1487,7 +1487,7 @@
 if { (eval echo configure:1488: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cc_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
-  if (./conftest; exit) 2>/dev/null; then
+  if test x$host_alias == x$build_alias && (./conftest; exit) 2>/dev/null; then
     ac_cv_prog_cc_cross=no
   else
     ac_cv_prog_cc_cross=yes
@@ -1566,7 +1566,7 @@
 build_os=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
 echo "$ac_t""$build" 1>&6
 
-if test $host != $build; then
+if test x$host_alias != x$build_alias; then
   for ac_prog in gcc cc
 do
 # Extract the first word of "$ac_prog", so it can be a program name with args.
