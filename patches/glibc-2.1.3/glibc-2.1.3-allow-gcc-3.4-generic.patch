Fixes following error when building with gcc-3.4.0:
../sysdeps/generic/strstr.c: In function `strstr':
../sysdeps/generic/strstr.c:85: error: label at end of compound statement
make[2]: *** [/home/dank/wk/crosstool-0.28-rc4h/build/i686-unknown-linux-gnu/gcc-3.4.0-20040406-glibc-2.1.3/build-glibc/string/strstr.o] Error 1


--------
CVSROOT:	/cvs/glibc
Module name:	libc
Changes by:	drepper@sources.redhat.com	2000-11-25 23:30:03

Modified files:
	sysdeps/generic: _strerror.c memrchr.c strcasestr.c strstr.c 

Log message:
	Add casts to avoid warnings.
--------

Retrieved with
 cvs -z 9 -d :pserver:anoncvs@sources.redhat.com:/cvs/glibc diff -u -D"2000-11-24 23:30:03" -D"2000-11-26 23:30:03" 
then fixed paths and threw out first two hunks


#Index: _strerror.c
#===================================================================
#RCS file: /cvs/libc/sysdeps/generic/_strerror.c,v
#retrieving revision 1.16
#retrieving revision 1.17
#diff -u -r1.16 -r1.17
#--- libc/sysdeps/generic/_strerror.c	29 Aug 2000 01:09:56 -0000	1.16
#+++ libc/sysdeps/generic/_strerror.c	26 Nov 2000 07:30:03 -0000	1.17
#@@ -56,7 +56,7 @@
# 	 buffer size.  */
#       q = __mempcpy (buf, unk, MIN (unklen, buflen));
#       if (unklen < buflen)
#-	memcpy (q, p, MIN (&numbuf[21] - p, buflen - unklen));
#+	memcpy (q, p, MIN ((size_t) (&numbuf[21] - p), buflen - unklen));
# 
#       /* Terminate the string in any case.  */
#       if (buflen > 0)
#Index: memrchr.c
#===================================================================
#RCS file: /cvs/libc/sysdeps/generic/memrchr.c,v
#retrieving revision 1.5
#retrieving revision 1.6
#diff -u -r1.5 -r1.6
#--- libc/sysdeps/generic/memrchr.c	23 Oct 2000 23:07:32 -0000	1.5
#+++ libc/sysdeps/generic/memrchr.c	26 Nov 2000 07:30:03 -0000	1.6
#@@ -86,7 +86,7 @@
#   /* All these elucidatory comments refer to 4-byte longwords,
#      but the theory applies equally well to 8-byte longwords.  */
# 
#-  longword_ptr = (unsigned long int *) char_ptr;
#+  longword_ptr = (const unsigned long int *) char_ptr;
# 
#   /* Bits 31, 24, 16, and 8 of this number are zero.  Call these bits
#      the "holes."  Note that there is a hole just to the left of
Index: strcasestr.c
===================================================================
RCS file: /cvs/libc/sysdeps/generic/strcasestr.c,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -r1.3 -r1.4
--- libc/sysdeps/generic/strcasestr.c	23 Jan 1999 22:16:03 -0000	1.3
+++ libc/sysdeps/generic/strcasestr.c	26 Nov 2000 07:30:03 -0000	1.4
@@ -1,5 +1,5 @@
 /* Return the offset of one string within another.
-   Copyright (C) 1994, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
+   Copyright (C) 1994,1996,1997,1998,1999,2000 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -62,7 +62,7 @@
 	  if (c == '\0')
 	    goto ret0;
 	}
-      while (_tolower (c) != b);
+      while (_tolower (c) != (int) b);
 
       c = _tolower (*++needle);
       if (c == '\0')
@@ -80,40 +80,42 @@
 	      a = *++haystack;
 	      if (a == '\0')
 		goto ret0;
-	      if (_tolower (a) == b)
+	      if (_tolower (a) == (int) b)
 		break;
 	      a = *++haystack;
 	      if (a == '\0')
 		goto ret0;
-shloop:	    }
-          while (_tolower (a) != b);
+shloop:
+	      ;
+	    }
+          while (_tolower (a) != (int) b);
 
 jin:	  a = *++haystack;
 	  if (a == '\0')
 	    goto ret0;
 
-	  if (_tolower (a) != c)
+	  if (_tolower (a) != (int) c)
 	    goto shloop;
 
 	  rhaystack = haystack-- + 1;
 	  rneedle = needle;
 	  a = _tolower (*rneedle);
 
-	  if (_tolower (*rhaystack) == a)
+	  if (_tolower (*rhaystack) == (int) a)
 	    do
 	      {
 		if (a == '\0')
 		  goto foundneedle;
 		++rhaystack;
 		a = _tolower (*++needle);
-		if (_tolower (*rhaystack) != a)
+		if (_tolower (*rhaystack) != (int) a)
 		  break;
 		if (a == '\0')
 		  goto foundneedle;
 		++rhaystack;
 		a = _tolower (*++needle);
 	      }
-	    while (_tolower (*rhaystack) == a);
+	    while (_tolower (*rhaystack) == (int) a);
 
 	  needle = rneedle;		/* took the register-poor approach */
 
Index: strstr.c
===================================================================
RCS file: /cvs/libc/sysdeps/generic/strstr.c,v
retrieving revision 1.10
retrieving revision 1.11
diff -u -r1.10 -r1.11
--- libc/sysdeps/generic/strstr.c	11 Sep 1997 03:18:20 -0000	1.10
+++ libc/sysdeps/generic/strstr.c	26 Nov 2000 07:30:03 -0000	1.11
@@ -1,5 +1,5 @@
 /* Return the offset of one string within another.
-   Copyright (C) 1994, 1996, 1997 Free Software Foundation, Inc.
+   Copyright (C) 1994, 1996, 1997, 2000 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -82,7 +82,9 @@
 	      a = *++haystack;
 	      if (a == '\0')
 		goto ret0;
-shloop:	    }
+shloop:
+	      ;
+	    }
           while (a != b);
 
 jin:	  a = *++haystack;
