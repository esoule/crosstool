2002-05-21  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/pthread/pthread.h (pthread_create): Rename first parameter.
	(pthread_cancel): Likewise.
	* internals.h (__pthread_create_2_1): Likewise.
	* sysdeps/unix/sysv/linux/bits/sigthread.h (pthread_kill): Likewise.
===================================================================
RCS file: /cvs/glibc/libc/linuxthreads/internals.h,v
retrieving revision 1.69.2.2
retrieving revision 1.69.2.3
diff -u -r1.69.2.2 -r1.69.2.3
--- libc/linuxthreads/internals.h	2002/03/22 08:30:32	1.69.2.2
+++ libc/linuxthreads/internals.h	2002/08/20 22:01:25	1.69.2.3
@@ -554,7 +554,7 @@
 /* Prototypes for compatibility functions.  */
 extern int __pthread_attr_init_2_1 (pthread_attr_t *__attr);
 extern int __pthread_attr_init_2_0 (pthread_attr_t *__attr);
-extern int __pthread_create_2_1 (pthread_t *__restrict __thread,
+extern int __pthread_create_2_1 (pthread_t *__restrict __threadp,
 				 const pthread_attr_t *__attr,
 				 void *(*__start_routine) (void *),
 				 void *__restrict __arg);
===================================================================
RCS file: /cvs/glibc/libc/linuxthreads/sysdeps/pthread/pthread.h,v
retrieving revision 1.31
retrieving revision 1.31.2.1
diff -u -r1.31 -r1.31.2.1
--- libc/linuxthreads/sysdeps/pthread/pthread.h	2001/03/15 21:12:31	1.31
+++ libc/linuxthreads/sysdeps/pthread/pthread.h	2002/08/20 22:01:26	1.31.2.1
@@ -160,7 +160,7 @@
 /* Create a thread with given attributes ATTR (or default attributes
    if ATTR is NULL), and call function START_ROUTINE with given
    arguments ARG.  */
-extern int pthread_create (pthread_t *__restrict __thread,
+extern int pthread_create (pthread_t *__restrict __threadp,
 			   __const pthread_attr_t *__restrict __attr,
 			   void *(*__start_routine) (void *),
 			   void *__restrict __arg) __THROW;
@@ -588,7 +588,7 @@
 extern int pthread_setcanceltype (int __type, int *__oldtype) __THROW;
 
 /* Cancel THREAD immediately or at the next possibility.  */
-extern int pthread_cancel (pthread_t __thread) __THROW;
+extern int pthread_cancel (pthread_t __cancelthread) __THROW;
 
 /* Test for pending cancellation for the current thread and terminate
    the thread as per pthread_exit(PTHREAD_CANCELED) if it has been
===================================================================
RCS file: /cvs/glibc/libc/linuxthreads/sysdeps/unix/sysv/linux/bits/sigthread.h,v
retrieving revision 1.5
retrieving revision 1.5.2.1
diff -u -r1.5 -r1.5.2.1
--- libc/linuxthreads/sysdeps/unix/sysv/linux/bits/sigthread.h	2000/08/21 06:48:03	1.5
+++ libc/linuxthreads/sysdeps/unix/sysv/linux/bits/sigthread.h	2002/08/20 22:01:26	1.5.2.1
@@ -1,5 +1,5 @@
 /* Signal handling function for threaded programs.
-   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.
+   Copyright (C) 1998, 1999, 2000, 2002 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -33,6 +33,6 @@
 			    __sigset_t *__restrict __oldmask)__THROW;
 
 /* Send signal SIGNO to the given thread. */
-extern int pthread_kill (pthread_t __thread, int __signo) __THROW;
+extern int pthread_kill (pthread_t __threadid, int __signo) __THROW;
 
 #endif	/* bits/sigthread.h */
